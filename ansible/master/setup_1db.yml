---
- name: setup for all servers
  hosts: database
  become: true
  remote_user: root
  vars_files:
    - vars/default.yml

  handlers:
    - name: restart postgres
      service: 
        name: postgresql
        state: restarted

  tasks:
    # - name: Install Prerequisites
    #  apt: name=aptitude update_cache=yes state=latest force_apt_get=yes

    # Sudo Group Setup
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: '/usr/sbin/visudo -cf %s'

    # User + Key Setup
    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ create_user }}"
        state: present
        groups: wheel
        append: true
        create_home: true
        shell: /bin/bash

    # unlock this task if the server does not get an ssh key by default
    - name: Set authorized key for remote user
      authorized_key:
        user: "{{ create_user }}"
        state: present
        key: "{{ copy_local_key }}"

    - name: Disable password authentication for root
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        regexp: '^#?PermitRootLogin'
        line: 'PermitRootLogin no' #PermitRootLogin prohibit-password

    # _______________SECURITY
    # UFW Setup
    # block access to SSH if 6 or more connections have been attempted in last 30 seconds
    - name: UFW - Allow SSH connections
      ufw:
        rule: limit
        port: ssh
        proto: tcp
    
    - name: UFW - Allow port 80
      ufw:
        rule: allow
        port: 80
        proto: tcp
    
    - name: UFW - Allow port 443
      ufw:
        rule: allow
        port: 443
        proto: tcp
    
    - name: UFW - Allow port 5000
      ufw:
        rule: allow
        port: 5000
        proto: tcp
    
    - name: UFW - Allow port 5001
      ufw:
        rule: allow
        port: 5001
        proto: tcp
    
    - name: UFW - Allow port 3000
      ufw:
        rule: allow
        port: 3000
        proto: tcp

    # - name: UFW - Global Deny Incoming
    #   ufw:
    #     rule: deny
    #     direction: incoming
    #     proto: tcp
    
    - name: UFW - Deny all other incoming traffic by default
      ufw:
        rule: deny
        direction: in

    - name: UFW - Allow connections to Postgresql on database server to private network
      ufw:
        rule: deny
        direction: in

    - name: UFW - Deny outgoing private network traffic 172.16.x
      ufw:
        rule: deny
        to_ip: 172.16.0.0/12
        direction: out
      tags: test
    
    - name: UFW - Deny outgoing private network traffic 192.168.x
      ufw:
        rule: deny
        to_ip: 192.168.0.0/16
        direction: out
    
    - name: UFW - Deny outgoing private network traffic 100.64.x
      ufw:
        rule: deny
        to_ip: 100.64.0.0/10
        direction: out
    
    - name: UFW - Deny outgoing private network traffic 198.18.x
      ufw:
        rule: deny
        to_ip: 198.18.0.0/15
        direction: out
    
    - name: UFW - Deny outgoing private network traffic 169.254.x
      ufw:
        rule: deny
        to_ip: 169.254.0.0/16
        direction: out
    
    # Editing /etc/sysctl.conf
    - name: sysctl security 1
      replace:
        path: /etc/sysctl.conf
        regexp: "#net.ipv4.conf.default.rp_filter=1"
        replace: "net.ipv4.conf.default.rp_filter=1"
    
    - name: sysctl security 2
      replace:
        path: /etc/sysctl.conf
        regexp: "#net.ipv4.conf.all.rp_filter=1"
        replace: "net.ipv4.conf.all.rp_filter=1"
    
    - name: sysctl security 3
      replace:
        path: /etc/sysctl.conf
        regexp: "#net.ipv4.conf.all.send_redirects = 0"
        replace: "net.ipv4.conf.all.send_redirects = 0"
    
    - name: prevent man in the middle ipv4
      replace:
        path: /etc/sysctl.conf
        regexp: "#net.ipv4.conf.all.send_redirects = 0"
        replace: "net.ipv4.conf.all.send_redirects = 0"

    - name: prevent man in the middle ipv6
      replace:
        path: /etc/sysctl.conf
        regexp: "#net.ipv6.conf.all.send_redirects = 0"
        replace: "net.ipv6.conf.all.send_redirects = 0"
    
    - name: sysctl security 4
      replace:
        path: /etc/sysctl.conf
        regexp: "net.ipv4.conf.all.accept_source_route = 0"
        replace: "net.ipv4.conf.all.accept_source_route = 0"
    
    - name: sysctl security 5
      replace:
        path: /etc/sysctl.conf
        regexp: "#net.ipv6.conf.all.accept_source_route = 0"
        replace: "net.ipv6.conf.all.accept_source_route = 0"
    
    - name: sysctl security 6
      replace:
        path: /etc/sysctl.conf
        regexp: "#net.ipv4.conf.all.log_martians = 1"
        replace: "net.ipv4.conf.all.log_martians = 1"

    # Editing /etc/host.conf
    # - name: prevent ip spoof
    #   lineinfile:
    #     path: /etc/host.conf
    #     state: present
    #     # regexp: 'multi on'
    #     line: 'nospoof on' #PermitRootLogin prohibit-password

    # Install Packages
    - name: Update apt
      apt: update_cache=yes

    # - name: Install required system packages
    #   apt: name={{ sys_packages }} state=latest
    #   ignore_errors: yes
    
    - name: Install base packages
      apt: name={{ sys_packages }} state=present
      ignore_errors: yes
      tags:
        - packages

    - name: Install database
      script: "/home/danscap/Desktop/server_conf/ansible/master/scripts/postgres.sh"
      tags: packages

    - name: setup database
      script: "/home/danscap/Desktop/server_conf/ansible/master/scripts/postgrespsql.sh"

    # PG_HBA.conf
    - name: Change pg_hba.conf to accept our private network range
      lineinfile:
        path: /etc/postgresql/13/main/pg_hba.conf
        state: present
        insertafter: '# IPv4 local connections:'
        line: 'host all all 10.0.0.0/16 md5'
        backup: no

    - name: Change pg_hba.conf to accept home ip address
      lineinfile:
        path: /etc/postgresql/13/main/pg_hba.conf
        state: present
        insertafter: '# IPv4 local connections:'
        line: 'host all all 76.26.18.8/32 md5'
        backup: no

    - name: Change pg_hba.conf to accept DO droplet address
      lineinfile:
        path: /etc/postgresql/13/main/pg_hba.conf
        state: present
        insertafter: '# IPv4 local connections:'
        line: 'host all all 68.183.29.141/32 md5'
        backup: no

    - name: Change pg_hba.conf to accept itself on localhost
      lineinfile:
        path: /etc/postgresql/13/main/pg_hba.conf
        state: present
        insertafter: '# IPv4 local connections:'
        line: 'host all all 127.0.0.1/32 md5'
        backup: no

    - name: Change pg_hba.conf to reject all other connections
      lineinfile:
        path: /etc/postgresql/13/main/pg_hba.conf
        state: present
        insertafter: '# IPv4 local connections:'
        line: 'host all all 0.0.0.0/0 reject'
        backup: no

    # POSTGRESQL.conf
    - name: Change postgres.conf to listen on localhost and private ip addresses
      replace: 
        path: /etc/postgresql/13/main/postgresql.conf
        regexp: '#listen_addresses.*'
        replace: "listen_addresses = 'localhost,10.0.1.1'"
        backup: no
      notify: restart postgres
